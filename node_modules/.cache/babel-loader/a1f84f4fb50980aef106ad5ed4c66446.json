{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/projects/crm_frontend/src/Pages/ProjectsPage/Projects.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'project',\n  label: 'Project Name',\n  minWidth: 170\n}, {\n  id: 'status',\n  label: 'Status',\n  minWidth: 50\n}, {\n  id: 'workers',\n  label: 'Workers',\n  minWidth: 250,\n  align: 'center',\n  format: value => value.toLocaleString()\n}, {\n  id: 'salaries',\n  label: 'Salaries',\n  minWidth: 50,\n  align: 'center',\n  format: value => value.toLocaleString()\n}, {\n  id: 'mark',\n  label: 'Mark',\n  minWidth: 50,\n  align: 'center',\n  format: value => value.toLocaleString()\n}];\n\nfunction createData(project, status, workers, salaries, mark) {\n  return {\n    project,\n    status,\n    workers,\n    salaries,\n    mark\n  };\n}\n\nconst rows = [createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"), createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"), createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"), createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"), createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"), createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"), createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"), createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"), createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"), createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"), createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"), createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\")];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    minHeight: 500\n  },\n  container: {\n    marginTop: 200,\n    margin: \"auto\",\n    maxWidth: 900,\n    maxHeight: 600\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    pr: 100 // display=\"inline-flex\"\n    ,\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/oem/Desktop/projects/crm_frontend/src/Pages/ProjectsPage/Projects.jsx"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","createData","project","status","workers","salaries","mark","rows","useStyles","root","width","minHeight","container","marginTop","margin","maxWidth","maxHeight","StickyHeadTable","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","code","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst columns = [\n  { id: 'project', label: 'Project Name', minWidth: 170 },\n  { id: 'status', label: 'Status', minWidth: 50 },\n  {\n    id: 'workers',\n    label: 'Workers',\n    minWidth: 250,\n    align: 'center',\n    format: value => value.toLocaleString(),\n  },\n  {\n    id: 'salaries',\n    label: 'Salaries',\n    minWidth: 50,\n    align: 'center',\n    format: value => value.toLocaleString(),\n  },\n  {\n    id: 'mark',\n    label: 'Mark',\n    minWidth: 50,\n    align: 'center',\n    format: value => value.toLocaleString(),\n  },\n];\n\nfunction createData(project, status, workers, salaries, mark) {\n  return { project, status, workers, salaries, mark };\n}\n\nconst rows = [\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n  createData('BlackList', 'Active', \"HPT_Team\", 0, \"excellent\"),\n\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    minHeight: 500,\n  },\n  container: {\n    marginTop: 200,\n    margin: \"auto\",\n    maxWidth: 900,\n    maxHeight: 600,\n\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map(column => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        pr={100}\n        // display=\"inline-flex\"\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}