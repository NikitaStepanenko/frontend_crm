{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/projects/crm_frontend/src/Pages/ProjectsPage/ProjectsList.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport List from '../../components/List/List.jsx';\nconst columns = [{\n  id: 'project',\n  label: 'Project Name',\n  minWidth: 170\n}, {\n  id: 'status',\n  label: 'Status',\n  minWidth: 50\n}, {\n  id: 'workers',\n  label: 'Workers',\n  minWidth: 250,\n  align: 'center',\n  format: value => value.toLocaleString()\n}, {\n  id: 'salaries',\n  label: 'Salaries',\n  minWidth: 50,\n  align: 'center',\n  format: value => value.toLocaleString()\n}, {\n  id: 'mark',\n  label: 'Mark',\n  minWidth: 50,\n  align: 'center',\n  format: value => value.toLocaleString()\n}];\n\nfunction ProjectsList({\n  props\n}) {\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => React.createElement(TableRow, {\n    hover: true,\n    role: \"checkbox\",\n    tabIndex: -1,\n    key: row.code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, columns.map(column => {\n    const value = row[column.id];\n    return React.createElement(TableCell, {\n      key: column.id,\n      align: column.align,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, column.format && typeof value === 'number' ? column.format(value) : value);\n  })))))), React.createElement(TablePagination, {\n    pr: 100 // display=\"inline-flex\"\n    ,\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }));\n}\n\nexport default ProjectsList;","map":{"version":3,"sources":["/home/oem/Desktop/projects/crm_frontend/src/Pages/ProjectsPage/ProjectsList.jsx"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","List","columns","id","label","minWidth","align","format","value","toLocaleString","ProjectsList","props","handleChangePage","event","newPage","setPage","handleChangeRowsPerPage","setRowsPerPage","target","classes","container","map","column","rows","slice","page","rowsPerPage","row","code","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport List from '../../components/List/List.jsx';\n\nconst columns = [\n    { id: 'project', label: 'Project Name', minWidth: 170 },\n    { id: 'status', label: 'Status', minWidth: 50 },\n    {\n        id: 'workers',\n        label: 'Workers',\n        minWidth: 250,\n        align: 'center',\n        format: (value) => value.toLocaleString(),\n    },\n    {\n        id: 'salaries',\n        label: 'Salaries',\n        minWidth: 50,\n        align: 'center',\n        format: (value) => value.toLocaleString(),\n    },\n    {\n        id: 'mark',\n        label: 'Mark',\n        minWidth: 50,\n        align: 'center',\n        format: (value) => value.toLocaleString(),\n    },\n];\n\nfunction ProjectsList({ props }) {\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    return (\n        <div>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                {columns.map((column) => {\n                                    const value = row[column.id];\n                                    return (\n                                        <TableCell key={column.id} align={column.align}>\n                                            {column.format && typeof value === 'number' ? column.format(value) : value}\n                                        </TableCell>\n                                    );\n                                })}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                pr={100}\n                // display=\"inline-flex\"\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </div>\n    );\n}\n\nexport default ProjectsList;\n"]},"metadata":{},"sourceType":"module"}